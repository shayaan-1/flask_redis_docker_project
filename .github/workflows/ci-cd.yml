name: CI / CD Pipeline

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

jobs:
  build-install:
    name: Build & Install
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade "pip<24.1"
          pip install -r requirements.txt

  lint-scan:
    name: Lint & Security Scan
    runs-on: ubuntu-latest
    needs: build-install

    steps:
      - uses: actions/checkout@v4
      - name: Install flake8 and bandit
        run: |
          pip install flake8 bandit
      - name: Run flake8
        run: flake8 . --exclude=venv
      - name: Run Bandit Security Scan
        run: bandit -r . || true

  test:
    name: Test (with PostgreSQL)
    runs-on: ubuntu-latest
    needs: build-install

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flaskdb
        ports: ['5432:5432']
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install --upgrade "pip<24.1"
          pip install -r requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/flaskdb

        run: |
          python -m unittest discover -s tests -p "test_*.py"

  docker-build-push:
    name:  Build & Push to DockerHub
    runs-on: ubuntu-latest
    needs: [lint-scan, test]

    steps:
      - uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:latest .

      - name: Tag image for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:latest \
          ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:production

      - name: Push Docker image to DockerHub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:latest

      - name: Push production tag
        if: github.ref == 'refs/heads/main'
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:production

      - name: Deployment Summary
        run: |
          echo "Docker image successfully deployed to DockerHub!"
          echo "Image: ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:latest"
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo " Production tag: ${{ secrets.DOCKERHUB_USERNAME }}/flask-redis-celery:production"
          fi